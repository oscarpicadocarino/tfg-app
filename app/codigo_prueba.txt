#include <iostream>
#include <string>

int main() {
    std::string nombre;

    std::cout << "Hola, ¿cómo te llamas? ";
    std::getline(std::cin, nombre);

    std::cout << "¡Encantado de conocerte, " << nombre << "!" << std::endl;

    return 0;
}


API KEY: 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



<?php

require 'conexion.php';

file_put_contents("debug_whereami.txt", getcwd());

$apiKey = "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"; // <-- Usa aquí tu API key real

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

file_put_contents("debug_test.txt", "¡El script se ejecutó!");

$input = json_decode(file_get_contents("php://input"), true);
file_put_contents("debug_input.txt", print_r($input, true)); // Log de entrada

$mensaje_usuario = trim($input["mensaje"] ?? "");
$id_clase = $input["id_clase"] ?? null;
$errores_seleccionados = $input["errores_seleccionados"] ?? [];

if (!$mensaje_usuario || !$id_clase) {
    http_response_code(400);
    echo json_encode(["respuesta" => "Faltan parámetros obligatorios."]);
    exit;
}

$stmtClase = $pdo->prepare("SELECT id_asignatura FROM clases WHERE id_clase = ?");
$stmtClase->execute([$id_clase]);
$clase = $stmtClase->fetch(PDO::FETCH_ASSOC);
$id_asignatura = $clase['id_asignatura'] ?? null;

if (!$id_asignatura) {
    http_response_code(400);
    echo json_encode(["respuesta" => "No se encontró la asignatura para la clase dada."]);
    exit;
}

$stmtAsignatura = $pdo->prepare("SELECT nombre FROM asignaturas WHERE id_asignatura = ?");
$stmtAsignatura->execute([$id_asignatura]);
$asignatura = $stmtAsignatura->fetch(PDO::FETCH_ASSOC);
$nombre_asignatura = $asignatura['nombre'] ?? 'la asignatura';

$stmtGuias = $pdo->prepare("SELECT competencias, resultados_aprendizaje FROM guias_docentes WHERE id_asignatura = ?");
$stmtGuias->execute([$id_asignatura]);
$guia = $stmtGuias->fetch(PDO::FETCH_ASSOC);

$competencias = $guia['competencias'] ?? 'No hay competencias definidas.';
$resultados_aprendizaje = $guia['resultados_aprendizaje'] ?? 'No hay resultados de aprendizaje definidos.';

$errores_texto = count($errores_seleccionados) > 0
    ? implode("\n- ", $errores_seleccionados)
    : "No se seleccionaron errores comunes.";

$system_prompt = <<<EOT
Eres un asistente educativo que genera actividades relacionadas con $nombre_asignatura, incluyendo propósito, objetivo de aprendizaje, enunciado, nivel, tiempo estimado y evaluación. Usa un formato claro y organizado.

Los alumnos cometen errores en lo siguiente:
- $errores_texto

Ten en cuenta que las competencias de la asignatura son:
$competencias

Y los resultados de aprendizaje:
$resultados_aprendizaje
EOT;

// Guardamos el prompt completo para revisar
file_put_contents("debug_system_prompt.txt", $system_prompt);

$payload = [
    "model" => "gpt-3.5-turbo",
    "messages" => [
        ["role" => "system", "content" => $system_prompt],
        ["role" => "user", "content" => $mensaje_usuario]
    ],
    "temperature" => 0.7
];

file_put_contents("debug_payload.json", json_encode($payload, JSON_PRETTY_PRINT));

$ch = curl_init("https://api.openai.com/v1/chat/completions");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, [
    "Content-Type: application/json",
    "Authorization: Bearer $apiKey"
]);
curl_setopt($ch, CURLOPT_POST, true);
curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($payload));

$response = curl_exec($ch);
$error_msg = curl_error($ch);
$http_status = curl_getinfo($ch, CURLINFO_HTTP_CODE);
curl_close($ch);

// Guardamos todo en ficheros de depuración
file_put_contents("debug_response_raw.txt", $response);
file_put_contents("debug_curl_error.txt", $error_msg . "\nHTTP status: " . $http_status);

if ($error_msg || !$response) {
    http_response_code(500);
    echo json_encode(["respuesta" => "Error en cURL: $error_msg"]);
    exit;
}

$data = json_decode($response, true);
file_put_contents("debug_response_decoded.json", print_r($data, true));

if (!isset($data["choices"][0]["message"]["content"])) {
    http_response_code(500);
    echo json_encode(["respuesta" => "Error de OpenAI: respuesta incompleta"]);
    exit;
}

header('Content-Type: application/json');
echo json_encode([
    "respuesta" => $data["choices"][0]["message"]["content"]
]);
exit;